type Contact @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: String
  message: String
}

type Resources @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  description: String
  file: String
  Categories: [Category] @manyToMany(relationName: "ResourcesCategory")
  cover: String
}

type Testimonials @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String
  name: String
  image: String
  location: String
  rating: Float
}

type Colleges @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  image: String
  link: String
}

type Comments @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String
  published_date: AWSDate
  author: Users @hasOne
  post_id: BlogPost @hasOne
  parent_coment: String
  replies: String
}

type Tags @model @auth(rules: [{allow: public}]) {
  id: ID!
  tag_name: String
  blogposts: [BlogPost] @manyToMany(relationName: "BlogPostTags")
}

type BlogPost @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  cover: String
  content: String
  author: String
  Tags: [Tags] @manyToMany(relationName: "BlogPostTags")
}

type Users @model @auth(rules: [{allow: public}]) {
  id: ID!
  sub_cognito: String
  name: String
  firstname: String
  registration_date: String
  direction: String
  city: String
  state: String
  country: String
  postal_code: String
  purchase_history: String
  ratings: String
  comments: String
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  user: String
  userId: String
  address: String
  date: AWSDate
  total: String
  status: String
}

type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  products: [Product] @manyToMany(relationName: "ProductCategory")
  resourcess: [Resources] @manyToMany(relationName: "ResourcesCategory")
}

type Product @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  sku: String
  price: Int
  stock: Int
  dimensions: String
  weight: Float
  rating: Float
  cover: String
  categories: [Category] @manyToMany(relationName: "ProductCategory")
  top: String
  bottom: String
  front: String
  back: String
}
 